document.addEventListener('DOMContentLoaded', () => {
    displayOrders(); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–∫–∞–∑—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
function displayOrders() {
    const ordersList = document.getElementById('orders-list');
    const orders = JSON.parse(localStorage.getItem('orders')) || [];

    if (orders.length === 0) {
        ordersList.innerHTML = '<tr><td colspan="6">–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤.</td></tr>';
        return;
    }

    

    // –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    ordersList.innerHTML = '';

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
    const headerRow = document.createElement('tr');
    headerRow.innerHTML = `
        <th>–ù–æ–º–µ—Ä</th>
        <th>–î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</th>
        <th>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞</th>
        <th>–°—Ç–æ–∏–º–æ—Å—Ç—å</th>
        <th>–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏</th>
        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
    `;
    ordersList.appendChild(headerRow);

    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –∑–∞–∫–∞–∑—É –∏ —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    orders.forEach((order, index) => {
        const orderDiv = document.createElement('div');
        orderDiv.classList.add('order-item');

        const orderDate = new Date(order.date);
        const formattedDate = orderDate.toLocaleString();

        const deliveryTime = order.formData.delivery_time || '–ö–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ';
        const totalCostText = calculateTotalCost(order.dishes);

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –±–ª—é–¥
        const dishes = order.dishes;
        const dishNames = [];
        let totalCost = 0;

        for (const dishType in dishes) {
            if (dishes[dishType] && dishes[dishType].name) {
                dishNames.push(dishes[dishType].name);
                totalCost += dishes[dishType].price || 0;
            } else if (dishes[dishType]) {
                dishNames.push(String(dishes[dishType]));
            }
        }

        const row = document.createElement('tr');

        row.innerHTML = `
            <td>${index + 1}</td>
            <td>${formattedDate}</td>
            <td>–°–æ—Å—Ç–∞–≤: ${dishNames.length > 0 ? dishNames.join(', ') : '–ù–µ —É–∫–∞–∑–∞–Ω—ã –±–ª—é–¥–∞'}</td>
            <td>${totalCostText}</td>
            <td>${deliveryTime}</td>
            <td>
                <button class="details-btn" onclick="showOrderDetails(${index})" title="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å">üëÅ</button>
                <button class="edit-btn" onclick="editOrder(${index})" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úèÔ∏è</button>
                <button class="delete-btn" onclick="confirmDeleteOrder(${index})" title="–£–¥–∞–ª–∏—Ç—å">üóëÔ∏è</button>
            </td>
        `;

        ordersList.appendChild(row);
    });
}

function showOrderDetails(index) {
    const orders = JSON.parse(localStorage.getItem('orders')) || [];
    const order = orders[index];
    const orderDate = new Date(order.date);
    const formattedDate = orderDate.toLocaleString(); 
    const totalCostText = calculateTotalCost(order.dishes);

    const modal = createModal(
        '–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞', 
        generateOrderDetailsContent(order, totalCostText, formattedDate),
        [{ label: '–û–∫', onClick: closeModal }]
    );
    document.body.appendChild(modal);
}

function calculateTotalCost(dishes) {
    let totalCost = 0;
    for (const dishType in dishes) {
        if (dishes[dishType] && dishes[dishType].price) {
            totalCost += dishes[dishType].price;
        }
    }
    return totalCost > 0 ? `${totalCost} ‚ÇΩ` : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
}

function generateOrderDetailsContent(order, totalCostText, formattedDate) {
    const selectedDishes = order.dishes || {};
    const soupOrder = selectedDishes.soup ? `${selectedDishes.soup.name} ${selectedDishes.soup.price} ‚ÇΩ` : "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
    const mainOrder = selectedDishes.main ? `${selectedDishes.main.name} ${selectedDishes.main.price} ‚ÇΩ` : "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
    const dessertsOrder = selectedDishes.desserts ? `${selectedDishes.desserts.name} ${selectedDishes.desserts.price} ‚ÇΩ` : "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
    const salatOrder = selectedDishes.salat ? `${selectedDishes.salat.name} ${selectedDishes.salat.price} ‚ÇΩ` : "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";
    const drinkOrder = selectedDishes.drink ? `${selectedDishes.drink.name} ${selectedDishes.drink.price} ‚ÇΩ` : "–ù–µ –≤—ã–±—Ä–∞–Ω–æ";

    return `
        <p>–í—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: ${formattedDate || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        <h3>–î–æ—Å—Ç–∞–≤–∫–∞</h3>
        <p>–ü–æ–ª–Ω–æ–µ –∏–º—è: ${order.formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        <p>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${order.formData.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
        <p>–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: ${order.formData.delivery_time || '–ö–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ'}</p>
        <p>Email: ${order.formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        <p>–¢–µ–ª–µ—Ñ–æ–Ω: ${order.formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        <h3>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</h3>
        <p>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${order.formData.comments || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
        <h3>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞</h3>
        <div id="general-status">
            <p><strong>–°—É–ø</strong></p>
            <p id="soup-order">${soupOrder}</p> 
            <p><strong>–ì–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ</strong></p>
            <p id="main-order">${mainOrder}</p>
            <p><strong>–°–∞–ª–∞—Ç—ã –∏ —Å—Ç–∞—Ä—Ç–µ—Ä—ã</strong></p>
            <p id="salat-order">${salatOrder}</p> 
            <p><strong>–î–µ—Å–µ—Ä—Ç—ã</strong></p>
            <p id="desserts-order">${dessertsOrder}</p> 
            <p><strong>–ù–∞–ø–∏—Ç–æ–∫</strong></p>
            <p id="drink-order">${drinkOrder}</p> 
        </div>
        <h3>–°—Ç–æ–∏–º–æ—Å—Ç—å: ${totalCostText || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</h3>
    `;
}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
function editOrder(index) {
    const orders = JSON.parse(localStorage.getItem('orders')) || [];
    const order = orders[index];
    const formattedDate = order.date ? new Date(order.date).toLocaleString() : '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const modal = createModal('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞', generateOrderEditForm(order, formattedDate), [
        { label: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å', onClick: () => saveOrderChanges(index) },
        { label: '–û—Ç–º–µ–Ω–∞', onClick: closeModal }
    ]);
    document.body.appendChild(modal);
}


function generateOrderEditForm(order, formattedDate) {
    return `
        <p>–í—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: ${formattedDate || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        <h3>–î–æ—Å—Ç–∞–≤–∫–∞</h3>
        <label>–ü–æ–ª–Ω–æ–µ –∏–º—è</label><input type="text" id="name" value="${order.formData.name || ''}">
        <label>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</label><input type="text" id="delivery_address" value="${order.formData.address || ''}">
        <label>–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏</label><input type="text" id="delivery_time" value="${order.formData.delivery_time || '–ö–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ'}">
        <label>–¢–µ–ª–µ—Ñ–æ–Ω</label><input type="text" id="phone" value="${order.formData.phone || ''}">
        <label>Email</label><input type="email" id="email" value="${order.formData.email || ''}">
        <h3>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</h3><textarea id="comment">${order.formData.comments || ''}</textarea>
        
    `;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–∫–∞–∑–∞
function saveOrderChanges(index) {
    const orders = JSON.parse(localStorage.getItem('orders')) || [];
    const order = orders[index];

    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ø–æ–ª–µ–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const updatedOrder = {
        ...order,
        formData: {
            name: document.getElementById('name').value,
            email: document.getElementById('email').value,
            phone: document.getElementById('phone').value,
            address: document.getElementById('delivery_address').value,
            delivery_time: document.getElementById('delivery_time').value,
            comments: document.getElementById('comment').value,
        }
    };

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ –º–∞—Å—Å–∏–≤–µ
    orders[index] = updatedOrder;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage
    localStorage.setItem('orders', JSON.stringify(orders));

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    displayOrders();

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    closeModal();

    // –û–ø–æ–≤–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    alert('–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
}


function createModal(title, content, buttons) {
    const modal = document.createElement('div');
    modal.classList.add('modal');

    modal.innerHTML = `
        <div class="modal-content">
            <span class="close-btn">&times;</span>
            <h2>${title}</h2>
            <div class="modal-body">${content}</div>
            <div class="modal-footer"></div>
        </div>
    `;

    const footer = modal.querySelector('.modal-footer');

    buttons.forEach(button => {
        const btn = document.createElement('button');
        btn.textContent = button.label;
        btn.addEventListener('click', button.onClick);
        footer.appendChild(btn);
    });

    modal.querySelector('.close-btn').addEventListener('click', closeModal);

    document.body.appendChild(modal);

    const modalContent = modal.querySelector('.modal-content');
    modalContent.style.position = 'fixed';
    modalContent.style.top = '50%';
    modalContent.style.left = '50%';
    modalContent.style.transform = 'translate(-50%, -50%)';
    modalContent.style.backgroundColor = '#fff'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–ª—ã–π —Ñ–æ–Ω
    modalContent.style.padding = '20px'; // –î–æ–±–∞–≤–ª—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—Å—Ç—É–ø
    modalContent.style.borderRadius = '8px'; // –ó–∞–∫—Ä—É–≥–ª—è–µ–º —É–≥–ª—ã

    return modal;
}

function closeModal() {
    const modal = document.querySelector('.modal');
    if (modal) {
        modal.remove();
    }
}

function confirmDeleteOrder(index) {
    const modal = createModal('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è', '<p>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑?</p>', [
        { label: '–î–∞', onClick: () => deleteOrder(index) },
        { label: '–û—Ç–º–µ–Ω–∞', onClick: closeModal }
    ]);
    document.body.appendChild(modal);
}

function deleteOrder(index) {
    let orders = JSON.parse(localStorage.getItem('orders')) || [];
    orders.splice(index, 1);
    localStorage.setItem('orders', JSON.stringify(orders));
    displayOrders();
    closeModal();
    alert('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω');
}
